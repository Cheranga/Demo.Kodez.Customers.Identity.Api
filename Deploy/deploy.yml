parameters:
  - name: buildNumber
    type: string

steps:
  - task: AzureCLI@2
    displayName: "Create resource group"
    inputs:
      azureSubscription: "$(azureSubscription)"
      scriptType: "pscore"
      scriptLocation: "inlineScript"
      inlineScript: |
        $ifExists = az group exists -n "$(rgName)"
        if ($ifExists -eq 'false') {
          echo 'creating the resource group'
          az group create -n "$(rgName)" -l "$(rgLocation)"
        }

  - task: AzureCLI@2
    displayName: "Provision resources"
    inputs:
      azureSubscription: "$(azureSubscription)"
      scriptType: "pscore"
      scriptLocation: "inlineScript"
      inlineScript: |
        az deployment group create `
        --name $(Build.BuildNumber)-cccustidentityapi `
        --resource-group "$(rgName)" `
        --template-file "$(Pipeline.Workspace)/deploy/main.bicep" `
        --parameters "buildNumber=$(Build.BuildNumber)" `
        "environmentName=$(environmentName)" `
        "apiEnvironmentName=$(apiEnvironment)" `
        "location=$(rgLocation)" `
        "apiName=$(apiName)" `
        "tableNames=$(tableNames)" `
        "sharedConfig=$(sharedConfig)"

  - task: AzureCLI@2
    displayName: "Set access to read Azure configurations"
    inputs:
      azureSubscription: "$(azureSubscription)"
      scriptType: "pscore"
      scriptLocation: "inlineScript"
      inlineScript: |
        $commonAppConfigId = /subscriptions/$(subscriptionId)/resourcegroups/$(sharedRgName)/providers/Microsoft.AppConfiguration/configurationStores/$(sharedConfig)
        $apiDeployment = "${{parameters.buildNumber}}-api-${{apiName}}-${{environmentName}}"

        $apiProductionId=$(az deployment group show -g "$(rgName)" -n "$apiDeployment" --query properties.outputs.ProductionObjectId.value)
        $apiStagingId=$(az deployment group show -g "$(rgName)" -n "$apiDeployment" --query properties.outputs.StagingObjectId.value)

        az role assignment create --role "App Configuration Data Reader" --assignee $apiProductionId --scope $commonAppConfigId
        az role assignment create --role "App Configuration Data Reader" --assignee $apiStagingId --scope $commonAppConfigId     