steps:
  - task: NuGetToolInstaller@1
    displayName: 'NuGet tool installer'

  - task: Cache@2
    displayName: 'Cache Nuget Packages'
    inputs:
      key: 'nuget | "$(Agent.OS)" | **/packages.lock.json'
      path: '$(NUGET_PACKAGES)'
      cacheHitVar: 'CACHE_RESTORED'

  - task: NuGetCommand@2
    displayName: 'Restore Nuget Packages'
    condition: ne(variables.CACHE_RESTORED, true)
    inputs:
      command: 'restore'
      restoreSolution: '$(solution)'    

  - task: VSBuild@1
    displayName: Build Solution
    inputs:
      solution: '$(solution)'
      platform: '$(platform)'
      configuration: '$(platformConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: Test
    inputs:
      command: 'test'
      projects: '**/*Tests.csproj'
      arguments: '--configuration Release'

  - task: DotNetCoreCLI@2
    displayName: "Publish web API"
    inputs:
      command: "publish"
      publishWebProjects: true
      arguments: "--configuration $(platformConfiguration) --output $(Build.ArtifactStagingDirectory)"
      zipAfterPublish: True

  - task: PublishBuildArtifacts@1
    displayName: "Create artifact for web API"
    inputs:
      pathtoPublish: "$(Build.ArtifactStagingDirectory)"
      artifactName: "WebApp"

  - publish: $(Build.Repository.LocalPath)/Deploy/Resources
    displayName: Create BICEP template artifacts
    artifact: deploy      